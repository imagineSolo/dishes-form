{"version":3,"sources":["components/Header/Header.js","components/Form/DishTypes/Pizza.js","components/Form/DishTypes/Sandwich.js","components/Form/DishTypes/Soup.js","components/Form/Form.js","utils/isValid.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","className","Pizza","props","inputChangeHandler","htmlFor","type","name","pattern","placeholder","onChange","e","step","Sandwich","Soup","min","max","defaultValue","Form","useState","formInput","setFormInput","formSubmitted","setFormSubmitted","error","setError","value","target","parseInt","onSubmit","preventDefault","slices","no_of_slices","diameter","spiciness_scale","slices_of_bread","isValidName","match","length","nameIsValid","isValidType","undefined","typeIsValid","isValidOptional","diameterIsValid","sandwichSlices","isFormValid","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","maxLength","required","id","style","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cc454ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\treturn <h1 className='header'>Dishes Form</h1>;\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Pizza = (props) => {\r\n\tconst { inputChangeHandler } = props;\r\n\treturn (\r\n\t\t<div className='form-control pizza-options'>\r\n\t\t\t<div>\r\n\t\t\t\t<label className='input-label' htmlFor='number'>\r\n\t\t\t\t\tNumber of slices:\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tname='no_of_slices'\r\n\t\t\t\t\tpattern='[0-9]'\r\n\t\t\t\t\tplaceholder='1 - 14'\r\n\t\t\t\t\tonChange={(e) => inputChangeHandler(e)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<label className='input-label' htmlFor='number'>\r\n\t\t\t\t\tDiameter:\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tstep='any'\r\n\t\t\t\t\tname='diameter'\r\n\t\t\t\t\tpattern='[0-9]'\r\n\t\t\t\t\tplaceholder='20 - 60'\r\n\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pizza;\r\n","import React from 'react';\r\n\r\nconst Sandwich = (props) => {\r\n\tconst { inputChangeHandler } = props;\r\n\treturn (\r\n\t\t<div className='form-control'>\r\n\t\t\t<label className='input-label' htmlFor='number'>\r\n\t\t\t\tSlices of bread:\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='number'\r\n\t\t\t\tname='slices_of_bread'\r\n\t\t\t\tplaceholder='1 - 10'\r\n\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sandwich;\r\n","import React from 'react';\r\n\r\nconst Soup = (props) => {\r\n\tconst { inputChangeHandler } = props;\r\n\treturn (\r\n\t\t<div className='form-control'>\r\n\t\t\t<label className='input-label' htmlFor='range'>\r\n\t\t\t\tSpiciness scale:\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='range'\r\n\t\t\t\tname='spiciness_scale'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tmax='10'\r\n\t\t\t\tdefaultValue='5'\r\n\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Soup;\r\n","import React, { useState } from 'react';\r\n\r\nimport Pizza from './DishTypes/Pizza';\r\nimport Sandwich from './DishTypes/Sandwich';\r\nimport Soup from './DishTypes/Soup';\r\nimport {\r\n\tnameIsValid,\r\n\ttypeIsValid,\r\n\tpizzaSlicesIsValid,\r\n\tdiameterIsValid,\r\n\tspicinessIsValid,\r\n\tsandwichSlices,\r\n} from '../../utils/isValid';\r\nimport './Form.scss';\r\n\r\nconst Form = () => {\r\n\tconst [formInput, setFormInput] = useState('');\r\n\tconst [formSubmitted, setFormSubmitted] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst inputChangeHandler = (e) => {\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetFormInput({\r\n\t\t\t...formInput,\r\n\t\t\t[e.target.name]:\r\n\t\t\t\te.target.type === 'number' || e.target.type === 'range'\r\n\t\t\t\t\t? parseInt(value)\r\n\t\t\t\t\t: value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst isFormValid = () => {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\ttype,\r\n\t\t\tno_of_slices,\r\n\t\t\tdiameter,\r\n\t\t\tspiciness_scale,\r\n\t\t\tslices_of_bread,\r\n\t\t} = formInput;\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\tconst isValidName = nameIsValid(name);\r\n\t\tconst isValidType = typeIsValid(type);\r\n\t\tlet isValidOptional = true;\r\n\r\n\t\tif (formInput.type === 'pizza') {\r\n\t\t\tisValidOptional =\r\n\t\t\t\tpizzaSlicesIsValid(no_of_slices) && diameterIsValid(diameter);\r\n\t\t}\r\n\r\n\t\tif (formInput.type === 'soup') {\r\n\t\t\tisValidOptional = spicinessIsValid(spiciness_scale);\r\n\t\t}\r\n\r\n\t\tif (formInput.type === 'sandwich') {\r\n\t\t\tisValidOptional = sandwichSlices(slices_of_bread);\r\n\t\t}\r\n\r\n\t\tisFormValid = isValidName && isValidType && isValidOptional;\r\n\r\n\t\treturn isFormValid;\r\n\t};\r\n\r\n\tconst submitFormHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetError(false);\r\n\t\tconst isValid = isFormValid();\r\n\r\n\t\tif (isValid) {\r\n\t\t\tfetch('https://frosty-wood-6558.getsandbox.com:443/dishes', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(formInput),\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log('Success:', data);\r\n\t\t\t\t})\r\n\t\t\t\t.then(setError && setError(false))\r\n\t\t\t\t.then(setFormSubmitted(true))\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetFormSubmitted(false);\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form className='form' onSubmit={submitFormHandler}>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label className='input-label' htmlFor='text'>\r\n\t\t\t\t\t\tDish name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tvalue={formInput.value}\r\n\t\t\t\t\t\tplaceholder='Name of the dish...'\r\n\t\t\t\t\t\tmaxLength='15'\r\n\t\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label className='input-label' htmlFor='text'>\r\n\t\t\t\t\t\tPreparation time:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='time'\r\n\t\t\t\t\t\tname='preparation_time'\r\n\t\t\t\t\t\tvalue={formInput.value}\r\n\t\t\t\t\t\tstep='1'\r\n\t\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-control type'>\r\n\t\t\t\t\t<label className='input-label' htmlFor='text'>\r\n\t\t\t\t\t\tType:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='type'\r\n\t\t\t\t\t\tid='dish-type-select'\r\n\t\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option>--select--</option>\r\n\t\t\t\t\t\t<option value='pizza'>Pizza</option>\r\n\t\t\t\t\t\t<option value='soup'>Soup</option>\r\n\t\t\t\t\t\t<option value='sandwich'>Sandwich</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t{formInput.type === 'pizza' && (\r\n\t\t\t\t\t\t<Pizza inputChangeHandler={inputChangeHandler} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{formInput.type === 'soup' && (\r\n\t\t\t\t\t\t<Soup inputChangeHandler={inputChangeHandler} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{formInput.type === 'sandwich' && (\r\n\t\t\t\t\t\t<Sandwich inputChangeHandler={inputChangeHandler} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='submit'>Submit</button>\r\n\t\t\t</form>\r\n\t\t\t{formSubmitted && <h2 style={{ color: 'green' }}>Form submitted!</h2>}\r\n\t\t\t{error && <h2 style={{ color: 'red' }}>Form invalid!</h2>}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","export const nameIsValid = (name) => {\r\n\tconst letters = /^[A-Za-z]+$/;\r\n\tif (name.match(letters)) {\r\n\t\tif (name.length > 2 && name.length < 15) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nexport const typeIsValid = (type) => {\r\n\t// !!\r\n\treturn type !== undefined ? true : false;\r\n};\r\n\r\nexport const pizzaSlicesIsValid = (slices) => {\r\n\treturn slices > 0 && slices < 15;\r\n};\r\n\r\nexport const diameterIsValid = (diameter) => {\r\n\treturn diameter > 19 && diameter < 61;\r\n};\r\n\r\nexport const spicinessIsValid = (spiciness) => {\r\n\treturn spiciness.length > 0;\r\n};\r\n\r\nexport const sandwichSlices = (slices) => {\r\n\treturn slices.length > 0 && slices.length < 11;\r\n};\r\n","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<h1>imagineSolo &copy; 2020</h1>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { React } from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Footer from './components/Footer/Footer';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Form />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}